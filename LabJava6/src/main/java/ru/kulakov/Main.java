package ru.kulakov;

import java.util.Scanner;

public class Main {
    static Main r = new Main();
    static Scanner n = new Scanner(System.in);

    public static void main(String[] args) {

        System.out.print("""
                ЛАБОРАТОРНАЯ РАБОТА №5
                ВЫПОЛНИЛ - КУЛАКОВ МАКСИМ ИТ-6 (ПМИ-10/2023)
                ВАРИАНТ 7
                
                Задания 1 - задания 1 темы 1
                Задание 2 - задания 1-6 темы 2
                Задание 3 - задание 1 темы 3
                Задание 4 - задание 1 темы 4
                Что-бы выйти - введите 0
                
                Чтобы просмотреть интересующее вас задание - введите его номер.
                """);
        r.choise();
    }

    public void choise() {
        while (true) {
            System.out.println("\nВведите число для выбора дальнейшего действия:");
            int choisenum = n.nextInt();
            if (choisenum == 0) {
                System.out.println("\nРабота программы завершена!");
                break;
            } else if (0 < choisenum && choisenum < 5) {
                System.out.println(tasks(choisenum));
            } else {
                System.out.print("\nВведите число в указанном диапазоне");
            }
        }
    }

    public String tasks(int args) {

        switch (args) {

            case 1:
                System.out.println("""
                        Текст задания 1 темы 1
                        
                        Разработайте класс Entity. Данный класс не является самостоятельной сущностью и предназначен
                        для наследования. Необходимо переопределить его метод приведения к строке так, чтобы поля
                        всех классов-наследников автоматически попадали в строковую форму объекта в виде пар ключзначение
                        
                        """);
                task3();
                break;

            case 2:
                System.out.println("""
                        Текст заданий 1-6 темы 2
                        
                        1 @Invoke.
                        Разработайте аннотацию @Invoke, со следующими характеристиками:
                         Целью может быть только МЕТОД
                         Доступна во время исполнения программы
                         Не имеет свойств
                        Проаннотируйте какой-либо метод данной аннотацией.
                        2 @Default.
                        Разработайте аннотацию @Default, со следующими характеристиками:
                         Целью может быть ТИП или ПОЛЕ
                         Доступна во время исполнения программы
                         Имеет обязательное свойство value типа Class
                        Проаннотируйте какой-либо класс данной аннотацией.
                        3 @ToString.
                        Разработайте аннотацию @ToString, со следующими характеристиками:
                         Целью может быть ТИП или ПОЛЕ
                         Доступна во время исполнения программы
                         Имеет необязательное свойство value c двумя вариантами значений: YES или NO
                         Значение свойства по умолчанию: YES
                        Проаннотируйте какой-либо класс данной аннотацией.
                        4 @Validate.
                        Разработайте аннотацию @Validate, со следующими характеристиками:
                         Целью может быть ТИП или АННОТАЦИЯ
                         Доступна во время исполнения программы
                         Имеет обязательное свойство value, типа Class[]
                        Проаннотируйте какой-либо класс данной аннотацией.
                        5 @Two.
                        Разработайте аннотацию @Two, со следующими характеристиками:
                         Целью может быть ТИП
                         Доступна во время исполнения программы
                         Имеет два обязательных свойства: first типа String и second типа int
                        Проаннотируйте какой-либо класс данной аннотацией.
                        6 @Cache.
                        Разработайте аннотацию @Cache, со следующими характеристиками:
                         Целью может быть ТИП
                         Доступна во время исполнения программы
                         Имеет необязательное свойство value, типа String[]
                         Значение свойства по умолчанию: пустой массив
                        Проаннотируйте какой-либо класс данной аннотацией.
                        
                        """);
                break;

            case 3:
                System.out.println("""
                        Текст задания 1 темы 3
                        
                        Измените класс Entity из задачи 1.1. Метод приведения к строке необходимо переписать таким образом,
                        что бы в строковую форму попадали только те поля, которые не помечены аннотацией @ToString (из
                        предыдущей задачи) со значением NO. Поле помеченное как @ToString(YES) или же не помеченное
                        никак должно попадать в строковое представление. В случае если с помощью @ToString(NO)
                        проаннотирован весь класс, то ни одно из его полей не попадает в строковое представление, кроме тех,
                        которые явно помечены как @ToString(YES).
                        
                        """);
                task3();
                break;

            case 4:
                System.out.println("""
                        Текст задания 1 темы 4
                        
                        Напишите тест, используя фреймворк junit, к методу из задания 3. Пояснения к тесту и объекту
                        тестирования отобразить в комментариях кода и в отчете.
                        
                        """);
                break;
        }
        return "";
    }

    public void task3() {
        B b = new B();
        System.out.println(b);
        A a = new A();
        System.out.println(A.s);
    }
}